asyncapi: 3.0.0
info:
  title: Slack Websocket and OpenAI API
  version: 1.0.0
servers:
  OpenAI_HTTPS:
    host: api.openai.com
    protocol: https
  Slack_WebSocket:
    host: wss-primary.slack.com
    protocol: wss
    security:
      - $ref: '#/components/securitySchemes/app_id'
      - $ref: '#/components/securitySchemes/ticket'
  Slack_HTTPS:
    host:  slack.com
    protocol: https
channels:
  SlackPostMessage:
    bindings:
      http:
        method: post
    address: /api/chat.postMessage
    servers:
      - $ref: "#/servers/Slack_HTTPS"
    messages:
      slackResponse:
        payload:
          type: object
          properties:
            channel:
              type: string
            text:
              type: string
  OpenAICompletion:
    bindings:
      http:
        method: post
    servers:
      - $ref: "#/servers/OpenAI_HTTPS"
    address: v1/chat/completions
    messages:
      OpenAIRequest: 
        $ref: "#/components/messages/OpenAIRequest"
      OpenAICompletionResponse: 
        $ref: "#/components/messages/OpenAICompletionResponse"
  SlackEventStream:
    servers:
      - $ref: "#/servers/Slack_WebSocket"
    address: /link/
    messages:
      SlackReactionAdded:
        $ref: "#/components/messages/SlackReactionAdded"
      GenericErrorPayload:
        $ref: "#/components/messages/GenericErrorPayload"
      slackAckEvent:
        $ref: "#/components/messages/slackAckEvent"
operations:
  sentSlackMessage:
    action: send
    bindings:
      http:
        method: POST
    channel:
      $ref: "#/channels/SlackPostMessage"
    messages:
      - $ref: "#/channels/SlackPostMessage/messages/slackResponse"
  receiveSlackConfirmation:
    action: receive
    channel:
      $ref: "#/channels/SlackPostMessage"
  SendToOpenAI:
    action: send
    bindings:
      http:
        method: POST
    channel: 
      $ref: "#/channels/OpenAICompletion"
    messages:
      - $ref: "#/channels/OpenAICompletion/messages/OpenAIRequest"
  ReceiveFromOpenAI:
    action: receive
    channel:
      $ref: "#/channels/OpenAICompletion"
    messages:
      - $ref: "#/channels/OpenAICompletion/messages/OpenAICompletionResponse"
  HandleSlackReaction:
    action: receive
    channel:
      $ref: "#/channels/SlackEventStream"
    messages:
      - $ref: "#/channels/SlackEventStream/messages/SlackReactionAdded"
      - $ref: "#/channels/SlackEventStream/messages/GenericErrorPayload"
components:
  securitySchemes:
    ticket:
      type: httpApiKey
      name: ticket
      in: query
    app_id:
      type: httpApiKey
      name: app_id
      in: query
  messages:
    slackAckEvent:
      payload:
        type: object
        properties:
          envelope_id:
            type: string
    slackResponse:
      payload:
        type: object
        properties:
          channel:
            type: string
          text:
            type: string
    OpenAIRequest:
      payload:
        type: object
        properties:
          model:
            type: string
            enum: ["gpt-3.5-turbo", "gpt-3.5-turbo-16k", "text-davinci-002"]
          messages:
            type: array
            items:
              type: object
              properties:
                role:
                  type: string
                  enum: ["user"]
                content:
                  type: string
          temperature:
            type: number
            minimum: 0.0
            maximum: 1.0
        required:
          - model
          - messages
          - temperature
    OpenAICompletionResponse:
      payload:
        type: object
        properties:
          choices:
            type: array
            items:
              type: object
              properties:
                finish_reason:
                  type: string
                  enum: ['stop']
                message:
                  type: object
                  properties:
                    content:
                      type: string
                    role:
                      type: string
                      enum: ['assistant']
              required:
                - finish_reason
                - message
        required:
          - choices
    SlackReactionAdded:
      payload:
        type: object
    GenericErrorPayload:
      payload:
        type: string
x-remoteServers: 
  - Slack_HTTPS
  - Slack_WebSocket
  - OpenAI_HTTPS